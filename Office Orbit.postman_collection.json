{
	"info": {
		"_postman_id": "0ead15aa-1960-474d-bf8c-3529af6cb4be",
		"name": "Office Orbit",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31954889",
		"_collection_link": "https://affored-team.postman.co/workspace/Office-Orbit~5dc3ba50-ab31-4f6d-94a2-f4a9f84647f3/collection/31954889-0ead15aa-1960-474d-bf8c-3529af6cb4be?action=share&source=collection_link&creator=31954889"
	},
	"item": [
		{
			"name": "Role",
			"item": [
				{
					"name": "Add new role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"HR\",\r\n  \"permissions\": [\"userAdd\", \"userEdit\", \"userDelete\"]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/role/add",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"role",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/roles",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Add new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"John Doe\",\r\n  \"email\": \"john.doe@example.com\",\r\n  \"phone\": \"7894561230\",\r\n  \"password\": \"StrongPass@123\",\r\n  \"designation\": \"Software Engineer\",\r\n//   \"role\": [],  // Example ObjectId(s)\r\n//   \"manager\": \"\",  // Example ObjectId\r\n  \"gender\": \"Male\",\r\n  \"dateOfBirth\": \"1995-07-20\",\r\n  \"address\": \"123 Main St, Mumbai, India\",\r\n  \"lastQualification\": \"B.Tech in Computer Science\",\r\n  \"totalExperience\": 3.5,\r\n  \"prevCompany\": \"ABC Technologies\",\r\n  \"joinDate\": \"2023-06-01\",\r\n  \"lastLogin\": \"2024-12-01T10:15:00Z\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/add",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"add"
							]
						},
						"description": "## Add User Endpoint\n\nThis endpoint allows clients to add a new user to the system. It is a POST request that requires the necessary user information to be sent in the request body.\n\n### Request Format\n\n- **URL**: `http://localhost:8080/user/add`\n    \n- **Method**: POST\n    \n- **Content-Type**: `multipart/form-data`\n    \n\n### Request Body\n\nThe request body must be sent as form-data. Each key in the form-data represents a parameter that is required to create a new user. The specific parameters and their descriptions should be defined by the API documentation, but they typically include fields such as username, password, email, etc.\n\n### Response Structure\n\nUpon a successful request, the server will respond with a confirmation of the user addition. The structure of the response typically includes:\n\n- **status**: Indicates whether the operation was successful or not.\n    \n- **message**: A descriptive message regarding the result of the request.\n    \n- **userId**: The unique identifier for the newly created user.\n    \n\nMake sure to handle responses appropriately based on the status returned."
					},
					"response": [
						{
							"name": "201 success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"Rupam\",\r\n    \"email\": \"rd@gmail.com\",\r\n    \"password\": \"Rupam@321#\",\r\n    \"phone\": \"4568521590\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/user/add",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"user",
										"add"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:3000"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "270"
								},
								{
									"key": "ETag",
									"value": "W/\"10e-iEh/9VT561S8YzYfnT4djsaZsLE\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Jun 2025 07:50:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User created successfully\",\n    \"user\": {\n        \"name\": \"Rupam\",\n        \"email\": \"rd@gmail.com\",\n        \"phone\": \"4568521590\",\n        \"password\": \"$2b$10$51ab/sVhK3zGc3NPcfUTMuy57oZVa4R9j3Az/RKc9IHGhqcEAdWXm\",\n        \"role\": [],\n        \"joinDate\": \"2025-06-25T07:50:30.125Z\",\n        \"_id\": \"685baa4610b0b05807e819be\",\n        \"__v\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"role\": [\"685be02ffeb7930d0c317a16\", \"685be03ffeb7930d0c317a18\"]  // ObjectId(s)\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/685bc3b88c5eb8f8c53c74f5/update",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"685bc3b88c5eb8f8c53c74f5",
								"update"
							]
						},
						"description": "## Add User Endpoint\n\nThis endpoint allows clients to add a new user to the system. It is a POST request that requires the necessary user information to be sent in the request body.\n\n### Request Format\n\n- **URL**: `http://localhost:8080/user/add`\n    \n- **Method**: POST\n    \n- **Content-Type**: `multipart/form-data`\n    \n\n### Request Body\n\nThe request body must be sent as form-data. Each key in the form-data represents a parameter that is required to create a new user. The specific parameters and their descriptions should be defined by the API documentation, but they typically include fields such as username, password, email, etc.\n\n### Response Structure\n\nUpon a successful request, the server will respond with a confirmation of the user addition. The structure of the response typically includes:\n\n- **status**: Indicates whether the operation was successful or not.\n    \n- **message**: A descriptive message regarding the result of the request.\n    \n- **userId**: The unique identifier for the newly created user.\n    \n\nMake sure to handle responses appropriately based on the status returned."
					},
					"response": [
						{
							"name": "201 success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"Rupam\",\r\n    \"email\": \"rd@gmail.com\",\r\n    \"password\": \"Rupam@321#\",\r\n    \"phone\": \"4568521590\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/user/add",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"user",
										"add"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:3000"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "270"
								},
								{
									"key": "ETag",
									"value": "W/\"10e-iEh/9VT561S8YzYfnT4djsaZsLE\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Jun 2025 07:50:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User created successfully\",\n    \"user\": {\n        \"name\": \"Rupam\",\n        \"email\": \"rd@gmail.com\",\n        \"phone\": \"4568521590\",\n        \"password\": \"$2b$10$51ab/sVhK3zGc3NPcfUTMuy57oZVa4R9j3Az/RKc9IHGhqcEAdWXm\",\n        \"role\": [],\n        \"joinDate\": \"2025-06-25T07:50:30.125Z\",\n        \"_id\": \"685baa4610b0b05807e819be\",\n        \"__v\": 0\n    }\n}"
						}
					]
				}
			],
			"description": "\n## üîê Authentication\n- **Method**: Bearer Token (JWT)\n- **Login Endpoint**: `/auth/login/`\n\n## üì¶ Features\n- User Registration & Login\n- Browse Books (New, Used)\n- Rent, Buy, or Sell Books\n- Admin Panel for Inventory Control\n- Payment Gateway Integration\n\n## üìÅ Folders\n- `Auth`: Register, Login, Logout\n- `Books`: List, Details, Rent, Sell\n- `Orders`: Checkout, Status\n- `Users`: Profile, Wishlist\n\n## üìé Usage Note\nAll requests require a JSON `Content-Type` header.\n\n> View individual requests for full examples and responses.\n"
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"rupam@example.com\",\r\n  \"password\": \"StrongPass@123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "default"
		}
	]
}